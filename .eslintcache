[{"D:\\MyProject\\ReactJS-Intern\\src\\index.js":"1","D:\\MyProject\\ReactJS-Intern\\src\\i18n.js":"2","D:\\MyProject\\ReactJS-Intern\\src\\reportWebVitals.js":"3","D:\\MyProject\\ReactJS-Intern\\src\\App.js":"4","D:\\MyProject\\ReactJS-Intern\\src\\components\\Header\\index.jsx":"5","D:\\MyProject\\ReactJS-Intern\\src\\pages\\ReactPage\\index.jsx":"6","D:\\MyProject\\ReactJS-Intern\\src\\pages\\SignUp\\index.jsx":"7","D:\\MyProject\\ReactJS-Intern\\src\\components\\SignUp\\index.jsx":"8","D:\\MyProject\\ReactJS-Intern\\src\\components\\SignUp\\FormSuccess.jsx":"9","D:\\MyProject\\ReactJS-Intern\\src\\components\\SignUp\\FormSignup.jsx":"10","D:\\MyProject\\ReactJS-Intern\\src\\components\\SignUp\\useForm.jsx":"11","D:\\MyProject\\ReactJS-Intern\\src\\components\\SignUp\\validateInfo.jsx":"12","D:\\MyProject\\ReactJS-Intern\\src\\components\\Footer\\index.jsx":"13","D:\\MyProject\\ReactJS-Intern\\src\\components\\Footer\\FooterElements.jsx":"14"},{"size":718,"mtime":1609392734060,"results":"15","hashOfConfig":"16"},{"size":1107,"mtime":1609391381990,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1609391381991,"results":"18","hashOfConfig":"16"},{"size":579,"mtime":1609410473074,"results":"19","hashOfConfig":"16"},{"size":1523,"mtime":1609411441117,"results":"20","hashOfConfig":"16"},{"size":1404,"mtime":1609407533921,"results":"21","hashOfConfig":"16"},{"size":192,"mtime":1609410735195,"results":"22","hashOfConfig":"16"},{"size":775,"mtime":1609408550440,"results":"23","hashOfConfig":"16"},{"size":367,"mtime":1609408522389,"results":"24","hashOfConfig":"16"},{"size":2706,"mtime":1609408532343,"results":"25","hashOfConfig":"16"},{"size":815,"mtime":1609408169262,"results":"26","hashOfConfig":"16"},{"size":792,"mtime":1609408169263,"results":"27","hashOfConfig":"16"},{"size":3534,"mtime":1609410699848,"results":"28","hashOfConfig":"16"},{"size":2219,"mtime":1609410477277,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"krm3c",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\MyProject\\ReactJS-Intern\\src\\index.js",[],"D:\\MyProject\\ReactJS-Intern\\src\\i18n.js",[],"D:\\MyProject\\ReactJS-Intern\\src\\reportWebVitals.js",[],"D:\\MyProject\\ReactJS-Intern\\src\\App.js",[],"D:\\MyProject\\ReactJS-Intern\\src\\components\\Header\\index.jsx",[],"D:\\MyProject\\ReactJS-Intern\\src\\pages\\ReactPage\\index.jsx",[],["62","63"],"D:\\MyProject\\ReactJS-Intern\\src\\pages\\SignUp\\index.jsx",[],"D:\\MyProject\\ReactJS-Intern\\src\\components\\SignUp\\index.jsx",[],"D:\\MyProject\\ReactJS-Intern\\src\\components\\SignUp\\FormSuccess.jsx",["64"],"import React from \"react\";\r\nimport SuccessImage from \"../../images/form-success-01.svg\";\r\n\r\nconst FormSuccess = () => {\r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <div className=\"form-success\">Congratulations!!!</div>\r\n      <img src={SuccessImage} alt=\"success-image\" className=\"form-img-2\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSuccess;\r\n","D:\\MyProject\\ReactJS-Intern\\src\\components\\SignUp\\FormSignup.jsx",["65","66","67","68","69"],"import React from \"react\";\r\nimport useForm from \"./useForm\";\r\nimport validate from \"./validateInfo\";\r\nimport \"./Form.css\";\r\n\r\nconst FormSignUp = ({ submitForm }) => {\r\n  const { handleChange, values, handleSubmit, errors } = useForm(\r\n    submitForm,\r\n    validate\r\n  );\r\n\r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <form onSubmit={handleSubmit} className=\"form\" noValidate>\r\n        <h1>Sign Up New Account!</h1>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"username\" className=\"form-label\">\r\n            Username\r\n          </label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            className=\"form-input\"\r\n            placeholder=\"Enter your username\"\r\n            value={values.username}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.username && <p>{errors.username}</p>}\r\n        </div>\r\n\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email\r\n          </label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"form-input\"\r\n            placeholder=\"Enter your email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"password\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-input\"\r\n            placeholder=\"Enter your password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>}\r\n        </div>\r\n\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"password2\" className=\"form-label\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            className=\"form-input\"\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            className=\"form-input\"\r\n            placeholder=\"Enter your password2\"\r\n            value={values.password2}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password2 && <p>{errors.password2}</p>}\r\n        </div>\r\n        <button className=\"form-input-btn\" type=\"submit\">\r\n          Sign Up\r\n        </button>\r\n        <span className=\"form-input-login\">\r\n          Already have an account? Login <a href=\"#\">here</a>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSignUp;\r\n","D:\\MyProject\\ReactJS-Intern\\src\\components\\SignUp\\useForm.jsx",["70"],"import { useEffect, useState } from \"react\";\r\n\r\nconst useForm = (callBack, validate) => {\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callBack();\r\n    }\r\n  }, [errors]);\r\n\r\n  return { handleChange, values, handleSubmit, errors };\r\n};\r\n\r\nexport default useForm;\r\n","D:\\MyProject\\ReactJS-Intern\\src\\components\\SignUp\\validateInfo.jsx",[],"D:\\MyProject\\ReactJS-Intern\\src\\components\\Footer\\index.jsx",[],"D:\\MyProject\\ReactJS-Intern\\src\\components\\Footer\\FooterElements.jsx",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":8,"column":7,"nodeType":"77","endLine":8,"endColumn":76},{"ruleId":"78","severity":1,"message":"79","line":24,"column":13,"nodeType":"80","endLine":24,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":40,"column":13,"nodeType":"80","endLine":40,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":56,"column":13,"nodeType":"80","endLine":56,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":72,"column":13,"nodeType":"80","endLine":72,"endColumn":35},{"ruleId":"81","severity":1,"message":"82","line":83,"column":42,"nodeType":"77","endLine":83,"endColumn":54},{"ruleId":"83","severity":1,"message":"84","line":33,"column":6,"nodeType":"85","endLine":33,"endColumn":14,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callBack' and 'isSubmitting'. Either include them or remove the dependency array. If 'callBack' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [callBack, errors, isSubmitting]",{"range":"92","text":"93"},[712,720],"[callBack, errors, isSubmitting]"]